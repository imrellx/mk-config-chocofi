/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/* TODO: */
/* 1. cut/copy/paste (really just copy paste) */
/* 2. move bt to a harder layer than numbers. */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    tapping-term-ms = <201>;
    flavor = "tap-preferred";
};

#define AL 0
#define SYM 1
#define NUM 2
#define SETTINGS 3
#define STAG(keycode) &dwm_ht LA(keycode) keycode // switch tag macro
#define hm_lc(keycode) &hm LCTL keycode
#define hm_rc(keycode) &hm RCTL keycode
#define hm_la(keycode) &hm LALT keycode
#define hm_ra(keycode) &hm RALT keycode

/ {
        behaviors {
            dwm_ht: dwm_hold_tap {
                compatible = "zmk,behavior-hold-tap";
                label = "DWM_HOLD_TAP";
                #binding-cells = <2>;
                tapping-term-ms = <220>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
            esc_ht: esc_hold_tap {
                compatible = "zmk,behavior-hold-tap";
                label = "ESCAPE_HOLD_TAP";
                #binding-cells = <2>;
                tapping-term-ms = <220>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            };
        };

        combos {
            compatible = "zmk,combos";
            // all left thumb keys
            combo_settings {
                timeout-ms = <200>;
                key-positions = <36 37 38>;
                bindings = <&mo SETTINGS>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  |
// |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  |
//             | ESC | RSE |BSPC |   | SPC | ENT  |  '  |
                        bindings = <
   &none &kp     Q     &kp W &kp F      &kp P      &kp B   &kp J &kp L    &kp U     &kp Y   &kp SEMI      &none
   &none &esc_ht ESC A &kp R hm_lc(S)   hm_la(T)   &kp G   &kp M hm_ra(N) hm_rc(E)  &kp I   &kp O         &none
   &none &mt LSFT Z    &kp X &kp C      &kp D      &kp V   &kp K &kp H    &kp COMMA &kp DOT &mt RSFT FSLH &none
                            &key_repeat &mo SYM &kp BSPC   &kp SPACE &mo NUM &key_repeat
                        >;
                };
                sym_layer {
// -----------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  -  |  \  |
// | TAB | LFT | DWN |  UP | RGT |   |  H  |  J  |  K  |  L  |  '  |
// |     |     | CTL | ALT | DEL |   |     |     |     |  -  |  =  |
//             |     |     |     |   | RET |     |     |
                        bindings = <
   &none &kp EXCL  &kp AT   &kp HASH &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp KP_MULTIPLY &kp MINUS &kp BSLH  &none
   &none &kp TAB   &kp LEFT &kp DOWN &kp UP   &kp RIGHT &kp H     &kp J    &kp K           &kp L     &kp SQT   &none
   &none &kp GRAVE &trans   &kp LCTL &kp LALT &kp DEL   &trans    &trans   &trans          &kp MINUS &kp EQUAL &none
                            &trans   &trans   &trans    &kp RET &trans &trans
                        >;
                };

                num_layer {
// -----------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// | ESC |     |  {  |  (  |  [  |   |  ]  |  )  |  }  |     |     |
// |     |     |     |     |     |   |     |     |     |     |     |
//             |     |     | ESC |   |     |     |     |
                        bindings = <
   &none STAG(N1) STAG(N2) STAG(N3)    STAG(N4)    STAG(N5)  STAG(N6) STAG(N7)    STAG(N8)    STAG(N9)  STAG(N0) &none
   &none &kp ESC  &trans   hm_lc(LBRC) hm_la(LPRN) &kp LBKT  &kp RBKT hm_ra(RPRN) hm_rc(RBRC) &trans    &trans   &none
   &none &trans   &trans   &trans      &trans      &trans    &trans   &trans      &trans      &trans    &trans   &none
                         &trans &trans &kp ESC    &trans  &trans &trans
                        >;
                };

                settings_layer {
// -----------------------------------------------------------------
// |     |     |     |     |     |   |     |     |     |     |     |
// |     |     |     |     |     |   |     |     |     |     |     |
// |     |     |     |     |     |   | BT3 | BT0 | BTP | BTN | BTC |
//             |     |     |     |   |     |     |     |
                        bindings = <
   &none &trans &trans &trans &trans &trans    &trans       &trans       &trans     &trans     &trans     &none
   &none &trans &trans &trans &trans &trans    &trans       &trans       &trans     &trans     &trans     &none
   &none &trans &trans &trans &trans &trans    &bt BT_SEL 3 &bt BT_SEL 0 &bt BT_PRV &bt BT_NXT &bt BT_CLR &none
                       &trans &trans &trans    &trans  &trans &trans
                        >;
                };
        };
};
